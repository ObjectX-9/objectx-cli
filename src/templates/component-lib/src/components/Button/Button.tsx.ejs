import React from 'react';
<% if (hasCssModules) { %>import styles from './Button.module.css';<% } else if (hasLess) { %>import './Button.less';<% } else if (hasTailwind) { %>// 使用Tailwind类名<% } else { %>import './Button.css';<% } %>

export interface ButtonProps {
  /**
   * Button content
   */
  children: React.ReactNode;
  /**
   * Button type
   */
  type?: 'primary' | 'secondary' | 'danger';
  /**
   * Button size
   */
  size?: 'small' | 'medium' | 'large';
  /**
   * Optional click handler
   */
  onClick?: () => void;
  /**
   * Disabled state
   */
  disabled?: boolean;
  /**
   * Additional style
   */
  style?: React.CSSProperties;
}

/**
 * 按钮组件
 */
export const Button: React.FC<ButtonProps> = ({ 
  children, 
  type = 'primary', 
  size = 'medium', 
  onClick, 
  disabled = false,
  style
}) => {
  <% if (hasCssModules) { %>
  // 使用CSS Modules
  return (
    <button
      className={`${styles.button} ${styles[`button-${type}`]} ${styles[`size-${size}`]}`}
      onClick={onClick}
      disabled={disabled}
      style={style}
    >
      {children}
    </button>
  );
  <% } else if (hasTailwind) { %>
  // 使用Tailwind CSS
  const buttonStyles = {
    primary: 'bg-blue-500 hover:bg-blue-600 text-white',
    secondary: 'bg-white border border-gray-300 hover:border-blue-500 hover:text-blue-500',
    danger: 'bg-red-500 hover:bg-red-600 text-white'
  };
  
  const sizeStyles = {
    small: 'py-1 px-2 text-sm',
    medium: 'py-2 px-4 text-base',
    large: 'py-3 px-6 text-lg'
  };
  
  const baseClasses = 'rounded font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-blue-300';
  const disabledClasses = disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer';
  
  return (
    <button
      className={`${baseClasses} ${buttonStyles[type]} ${sizeStyles[size]} ${disabledClasses}`}
      onClick={onClick}
      disabled={disabled}
      style={style}
    >
      {children}
    </button>
  );
  <% } else { %>
  // 使用普通CSS或Less
  return (
    <button
      className={`button button-${type} size-${size}`}
      onClick={onClick}
      disabled={disabled}
      style={style}
    >
      {children}
    </button>
  );
  <% } %>
}; 